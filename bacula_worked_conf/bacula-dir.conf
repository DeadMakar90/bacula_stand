Director {

# имя Директора

Name = director-dir

# какой порт слушать (используется значение по умолчанию)

DIRport = 9101

# путь к сценарию, содержащему sql запросы для работы с Bacula Catalog

QueryFile = "/etc/bacula/scripts/query.sql"

# папка в которой лежат статус-файлы Директора

WorkingDirectory = "/var/lib/bacula"

# pid-файл демона Директора

PidDirectory = "/run/bacula"

# Максимальное количество выполняемых заданий.

# (не рекомендуется одновременно запускать более одного задания)

Maximum Concurrent Jobs = 1

# Пароль Директора

Password = "7895123"

# Конфигурация параметров уведомлений (описано в секции Messages)

Messages = Daemon

# fqdn имя или IP-адрес Директора

DirAddress = 192.168.0.5

}



Catalog {

# наименование Bacula Catalog

Name = BaculaCatalog

# адрес сервера БД PostgreSQL

DB Address = 192.168.0.5

# порт подключения на сервере

DB PORT = 5432

# имя базы данных на сервере PostgreSQL

dbname = bacula

# имя пользователя базы данных на сервере PostgreSQL

dbuser = bacula

# пароль пользователя базы данных на сервере PostgreSQL

dbpassword = bacula

}



JobDefs {

# Имя задания

Name = "DefaultJob"

# Тип задания (backup, restore и т.д.)

Type = Backup

# Уровень бэкапа (Full, Incremental, Differential и т.п)

Level = Incremental

# Имя клиента на котором выполняется задание

Client = client-fd

# Набор файлов для выполнения задания

FileSet = "Full Set"

# Расписание выполнения задания

Schedule = "WeeklyCycle"

# Файловое хранилище

Storage = storage-sd

# Поведение уведомлений

Messages = Standard

# Пул, куда будем писать бэкапы. Если мы хотим сделать отдельный пул для каждого клиента,

# или использовать префиксы, тогда пул указывается в задании для каждого клиента

# переопределяя тем самым эту настройку

Pool = File

# Буферизация атрибутов файлов

SpoolAttributes = yes

# Приоритет. Давая заданиям приоритеты от 1 (max) до 10 (min), можно регулировать последовательность их выполнения.

Priority = 10

# Файл хранит информацию откуда извлекать данные при восстановлении

Write Bootstrap = "/var/lib/bacula/%c.bsr"

}



Storage {

# имя Хранилища

Name = storage-sd

# fqdn имя или IP-адрес хранилища.

# Даже если хранилище на этой же машине "localhost" использовать не рекомендуется

Address = 192.168.0.6

# порт оставляем стандартный

SDPort = 9103

# пароль Хранилища

Password = "7895123"

# имя устройства хранения, описаное в файле bacula-sd.conf

Device = Autochanger1

# Должно соответствовать директиве Media Type ресурса Device настройки

Media Type = File1

# Максимальное количество выполняемых заданий.

# (не рекомендуется одновременно запускать более одного задания)

Maximum Concurrent Jobs = 1
}



Pool {

# имя пула, указывается в заданиях резервного копирования

Name = File

# тип пула

Pool Type = Backup

# Bacula может автоматически очищать или перезаписывать тома пула

Recycle = yes

# период в течении которого информация о заданиях и файлах хранится в БД, по истечению периода эта информация удаляется

Volume Retention = 365 days

# удалять из БД записи о заданиях и файлах , срок хранения которых истёк в соответствии с Volume Retention

AutoPrune = yes

# максимальный объем тома в пуле

Maximum Volume Bytes = 50G

# максимальное количество томов в пуле

Maximum Volumes = 100

# с каких символов начинаются имена томов пула

Label Format = "Vol-"

}



# Данная секция описывает стандартное поведение уведомлений

Messages {

# имя

Name = Standard

# команда отправки письма

mailcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula: %t %e of %c %l\" %r"

# команда для передачи сообщений оператору

operatorcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula: Intervention needed for %j\" %r"

# куда = кому = и какие уведомления отправлять

mail = root = all, !skipped

# требование к оператору смонтировать том по необходимости

operator = root = mount

# какие сообщения выводить в консоль

console = all, !skipped, !saved

# путь к логу = какие сообщения записывать в лог

append = "/var/log/bacula/bacula.log" = all, !skipped

# записывать в СУБД в таблицу Log; очищается одновременно с удалением записи о задании

catalog = all

}



# Данная секция описывает поведение уведомлений непосредственно Для самого демона Bacula

Messages {

# имя

Name = Daemon

# команда отправки письма

mailcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula daemon message\" %r"

# куда = кому = и какие уведомления отправлять

mail = root = all, !skipped

# какие сообщения выводить в консоль

console = all, !skipped, !saved

# путь к логу = какие сообщения записывать в лог

append = "/var/log/bacula/bacula.log" = all, !skipped

}



# Дальнейшие строчки подгружают все конфигурационные файлы из папок

# «job.d» «client.d» «fileset.d» «schedule.d»

@|"sh -c 'for f in /etc/bacula/job.d/*.conf ; do echo @${f} ; done'"

@|"sh -c 'for f in /etc/bacula/client.d/*.conf ; do echo @${f} ; done'"

@|"sh -c 'for f in /etc/bacula/fileset.d/*.conf ; do echo @${f} ; done'"

@|"sh -c 'for f in /etc/bacula/schedule.d/*.conf ; do echo @${f} ; done'"
